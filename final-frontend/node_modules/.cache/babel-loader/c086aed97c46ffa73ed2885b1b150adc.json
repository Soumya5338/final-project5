{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SOUMYA MANTHA\\\\Desktop\\\\p5-project\\\\final-frontend\\\\src\\\\components\\\\Sidebar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\"; // ✅ Import useNavigate\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Sidebar = _ref => {\n  _s();\n\n  let {\n    projects,\n    onAddProject,\n    onDeleteProject,\n    isAuthenticated\n  } = _ref;\n  const [newProjectName, setNewProjectName] = useState(\"\");\n  const [newProjectDescription, setNewProjectDescription] = useState(\"\");\n  const navigate = useNavigate(); // ✅ For programmatic navigation\n  // ✅ Handle clicking on a project\n\n  const handleProjectClick = projectId => {\n    if (isAuthenticated) {\n      navigate(`/project/${projectId}`); // ✅ Navigate to project details\n    } else {\n      navigate(\"/login\"); // ✅ Redirect to login if not authenticated\n    }\n  }; // ✅ Handle adding a new project\n\n\n  const handleAddProject = () => {\n    if (newProjectName && newProjectDescription) {\n      const newProject = {\n        _id: projects.length + 1,\n        // ✅ Use `_id` (MongoDB convention)\n        name: newProjectName,\n        description: newProjectDescription\n      };\n      onAddProject(newProject);\n      setNewProjectName(\"\");\n      setNewProjectDescription(\"\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-64 bg-gray-800 text-white p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-lg font-semibold mb-6\",\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: projects.map(project => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleProjectClick(project._id),\n          className: \"block py-2 px-4 text-left w-full hover:bg-gray-700 rounded\",\n          children: project.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onDeleteProject(project._id),\n          className: \"ml-2 text-red-500 hover:text-red-700\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, project._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold mb-4\",\n        children: \"Add New Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Project Name\",\n        value: newProjectName,\n        onChange: e => setNewProjectName(e.target.value),\n        className: \"w-full p-2 mb-2 text-black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Project Description\",\n        value: newProjectDescription,\n        onChange: e => setNewProjectDescription(e.target.value),\n        className: \"w-full p-2 mb-2 text-black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddProject,\n        className: \"w-full bg-blue-500 text-white py-2 rounded mt-2\",\n        children: \"Add Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Sidebar, \"E+v6Kh7ZSCV6vks8bAGGO+fVW5Q=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useState","Link","useNavigate","Sidebar","projects","onAddProject","onDeleteProject","isAuthenticated","newProjectName","setNewProjectName","newProjectDescription","setNewProjectDescription","navigate","handleProjectClick","projectId","handleAddProject","newProject","_id","length","name","description","map","project","e","target","value"],"sources":["C:/Users/SOUMYA MANTHA/Desktop/p5-project/final-frontend/src/components/Sidebar.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\"; // ✅ Import useNavigate\r\n\r\nconst Sidebar = ({ projects, onAddProject, onDeleteProject, isAuthenticated }) => {\r\n  const [newProjectName, setNewProjectName] = useState(\"\");\r\n  const [newProjectDescription, setNewProjectDescription] = useState(\"\");\r\n  const navigate = useNavigate(); // ✅ For programmatic navigation\r\n\r\n  // ✅ Handle clicking on a project\r\n  const handleProjectClick = (projectId) => {\r\n    if (isAuthenticated) {\r\n      navigate(`/project/${projectId}`); // ✅ Navigate to project details\r\n    } else {\r\n      navigate(\"/login\"); // ✅ Redirect to login if not authenticated\r\n    }\r\n  };\r\n\r\n  // ✅ Handle adding a new project\r\n  const handleAddProject = () => {\r\n    if (newProjectName && newProjectDescription) {\r\n      const newProject = {\r\n        _id: projects.length + 1, // ✅ Use `_id` (MongoDB convention)\r\n        name: newProjectName,\r\n        description: newProjectDescription,\r\n      };\r\n      onAddProject(newProject);\r\n      setNewProjectName(\"\");\r\n      setNewProjectDescription(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-64 bg-gray-800 text-white p-6\">\r\n      <h2 className=\"text-lg font-semibold mb-6\">Projects</h2>\r\n      <ul>\r\n        {projects.map((project) => (\r\n          <li key={project._id} className=\"flex justify-between items-center\">\r\n            {/* ✅ Use button instead of <Link> to control navigation */}\r\n            <button\r\n              onClick={() => handleProjectClick(project._id)}\r\n              className=\"block py-2 px-4 text-left w-full hover:bg-gray-700 rounded\"\r\n            >\r\n              {project.name}\r\n            </button>\r\n            {/* Delete Button */}\r\n            <button\r\n              onClick={() => onDeleteProject(project._id)}\r\n              className=\"ml-2 text-red-500 hover:text-red-700\"\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      {/* ✅ Add New Project */}\r\n      <div className=\"mt-6\">\r\n        <h3 className=\"text-lg font-semibold mb-4\">Add New Project</h3>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Project Name\"\r\n          value={newProjectName}\r\n          onChange={(e) => setNewProjectName(e.target.value)}\r\n          className=\"w-full p-2 mb-2 text-black\"\r\n        />\r\n        <textarea\r\n          placeholder=\"Project Description\"\r\n          value={newProjectDescription}\r\n          onChange={(e) => setNewProjectDescription(e.target.value)}\r\n          className=\"w-full p-2 mb-2 text-black\"\r\n        />\r\n        <button\r\n          onClick={handleAddProject}\r\n          className=\"w-full bg-blue-500 text-white py-2 rounded mt-2\"\r\n        >\r\n          Add Project\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}